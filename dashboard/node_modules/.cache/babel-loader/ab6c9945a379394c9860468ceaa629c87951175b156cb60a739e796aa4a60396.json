{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nconst useWebSocket = url => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastMessage, setLastMessage] = useState(null);\n  const [connectionError, setConnectionError] = useState(null);\n  const wsRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const connect = () => {\n    try {\n      console.log('Connecting to WebSocket:', url);\n      wsRef.current = new WebSocket(url);\n      wsRef.current.onopen = () => {\n        console.log('WebSocket connected');\n        setIsConnected(true);\n        setConnectionError(null);\n      };\n      wsRef.current.onmessage = event => {\n        try {\n          const message = JSON.parse(event.data);\n          console.log('WebSocket message received:', message);\n          setLastMessage(message);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      wsRef.current.onclose = event => {\n        console.log('WebSocket disconnected:', event.code, event.reason);\n        setIsConnected(false);\n\n        // Attempt to reconnect after 3 seconds\n        if (!event.wasClean) {\n          reconnectTimeoutRef.current = setTimeout(() => {\n            console.log('Attempting to reconnect...');\n            connect();\n          }, 3000);\n        }\n      };\n      wsRef.current.onerror = error => {\n        console.error('WebSocket error:', error);\n        setConnectionError('WebSocket connection failed');\n        setIsConnected(false);\n      };\n    } catch (error) {\n      console.error('Error creating WebSocket connection:', error);\n      setConnectionError('Failed to create WebSocket connection');\n    }\n  };\n  const disconnect = () => {\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current);\n    }\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.close(1000, 'Component unmounting');\n    }\n  };\n  const sendMessage = message => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify(message));\n      return true;\n    }\n    console.warn('WebSocket not connected, cannot send message');\n    return false;\n  };\n  useEffect(() => {\n    connect();\n    return () => {\n      disconnect();\n    };\n  }, [url]);\n  return {\n    isConnected,\n    lastMessage,\n    connectionError,\n    sendMessage,\n    reconnect: connect\n  };\n};\n_s(useWebSocket, \"lsB6nJ/h2dk1sVKMV34dG1vy1yw=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useRef","useWebSocket","url","_s","isConnected","setIsConnected","lastMessage","setLastMessage","connectionError","setConnectionError","wsRef","reconnectTimeoutRef","connect","console","log","current","WebSocket","onopen","onmessage","event","message","JSON","parse","data","error","onclose","code","reason","wasClean","setTimeout","onerror","disconnect","clearTimeout","readyState","OPEN","close","sendMessage","send","stringify","warn","reconnect"],"sources":["/Users/darkarmy/file_sync/dashboard/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nconst useWebSocket = (url) => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastMessage, setLastMessage] = useState(null);\n  const [connectionError, setConnectionError] = useState(null);\n  const wsRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n\n  const connect = () => {\n    try {\n      console.log('Connecting to WebSocket:', url);\n      wsRef.current = new WebSocket(url);\n\n      wsRef.current.onopen = () => {\n        console.log('WebSocket connected');\n        setIsConnected(true);\n        setConnectionError(null);\n      };\n\n      wsRef.current.onmessage = (event) => {\n        try {\n          const message = JSON.parse(event.data);\n          console.log('WebSocket message received:', message);\n          setLastMessage(message);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n\n      wsRef.current.onclose = (event) => {\n        console.log('WebSocket disconnected:', event.code, event.reason);\n        setIsConnected(false);\n        \n        // Attempt to reconnect after 3 seconds\n        if (!event.wasClean) {\n          reconnectTimeoutRef.current = setTimeout(() => {\n            console.log('Attempting to reconnect...');\n            connect();\n          }, 3000);\n        }\n      };\n\n      wsRef.current.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        setConnectionError('WebSocket connection failed');\n        setIsConnected(false);\n      };\n\n    } catch (error) {\n      console.error('Error creating WebSocket connection:', error);\n      setConnectionError('Failed to create WebSocket connection');\n    }\n  };\n\n  const disconnect = () => {\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current);\n    }\n    \n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.close(1000, 'Component unmounting');\n    }\n  };\n\n  const sendMessage = (message) => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify(message));\n      return true;\n    }\n    console.warn('WebSocket not connected, cannot send message');\n    return false;\n  };\n\n  useEffect(() => {\n    connect();\n\n    return () => {\n      disconnect();\n    };\n  }, [url]);\n\n  return {\n    isConnected,\n    lastMessage,\n    connectionError,\n    sendMessage,\n    reconnect: connect\n  };\n};\n\nexport default useWebSocket; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEnD,MAAMC,YAAY,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAMY,KAAK,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC1B,MAAMW,mBAAmB,GAAGX,MAAM,CAAC,IAAI,CAAC;EAExC,MAAMY,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEZ,GAAG,CAAC;MAC5CQ,KAAK,CAACK,OAAO,GAAG,IAAIC,SAAS,CAACd,GAAG,CAAC;MAElCQ,KAAK,CAACK,OAAO,CAACE,MAAM,GAAG,MAAM;QAC3BJ,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCT,cAAc,CAAC,IAAI,CAAC;QACpBI,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC;MAEDC,KAAK,CAACK,OAAO,CAACG,SAAS,GAAIC,KAAK,IAAK;QACnC,IAAI;UACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;UACtCV,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEM,OAAO,CAAC;UACnDb,cAAc,CAACa,OAAO,CAAC;QACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;UACdX,OAAO,CAACW,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QAC1D;MACF,CAAC;MAEDd,KAAK,CAACK,OAAO,CAACU,OAAO,GAAIN,KAAK,IAAK;QACjCN,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEK,KAAK,CAACO,IAAI,EAAEP,KAAK,CAACQ,MAAM,CAAC;QAChEtB,cAAc,CAAC,KAAK,CAAC;;QAErB;QACA,IAAI,CAACc,KAAK,CAACS,QAAQ,EAAE;UACnBjB,mBAAmB,CAACI,OAAO,GAAGc,UAAU,CAAC,MAAM;YAC7ChB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;YACzCF,OAAO,CAAC,CAAC;UACX,CAAC,EAAE,IAAI,CAAC;QACV;MACF,CAAC;MAEDF,KAAK,CAACK,OAAO,CAACe,OAAO,GAAIN,KAAK,IAAK;QACjCX,OAAO,CAACW,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;QACxCf,kBAAkB,CAAC,6BAA6B,CAAC;QACjDJ,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;IAEH,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5Df,kBAAkB,CAAC,uCAAuC,CAAC;IAC7D;EACF,CAAC;EAED,MAAMsB,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIpB,mBAAmB,CAACI,OAAO,EAAE;MAC/BiB,YAAY,CAACrB,mBAAmB,CAACI,OAAO,CAAC;IAC3C;IAEA,IAAIL,KAAK,CAACK,OAAO,IAAIL,KAAK,CAACK,OAAO,CAACkB,UAAU,KAAKjB,SAAS,CAACkB,IAAI,EAAE;MAChExB,KAAK,CAACK,OAAO,CAACoB,KAAK,CAAC,IAAI,EAAE,sBAAsB,CAAC;IACnD;EACF,CAAC;EAED,MAAMC,WAAW,GAAIhB,OAAO,IAAK;IAC/B,IAAIV,KAAK,CAACK,OAAO,IAAIL,KAAK,CAACK,OAAO,CAACkB,UAAU,KAAKjB,SAAS,CAACkB,IAAI,EAAE;MAChExB,KAAK,CAACK,OAAO,CAACsB,IAAI,CAAChB,IAAI,CAACiB,SAAS,CAAClB,OAAO,CAAC,CAAC;MAC3C,OAAO,IAAI;IACb;IACAP,OAAO,CAAC0B,IAAI,CAAC,8CAA8C,CAAC;IAC5D,OAAO,KAAK;EACd,CAAC;EAEDxC,SAAS,CAAC,MAAM;IACda,OAAO,CAAC,CAAC;IAET,OAAO,MAAM;MACXmB,UAAU,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,CAAC7B,GAAG,CAAC,CAAC;EAET,OAAO;IACLE,WAAW;IACXE,WAAW;IACXE,eAAe;IACf4B,WAAW;IACXI,SAAS,EAAE5B;EACb,CAAC;AACH,CAAC;AAACT,EAAA,CAvFIF,YAAY;AAyFlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}